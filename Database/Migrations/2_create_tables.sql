      CREATE TABLE groups (
          id integer GENERATED BY DEFAULT AS IDENTITY,
          group_name text NOT NULL,
          type group_type NOT NULL,
          CONSTRAINT pk_groups PRIMARY KEY (id)
      );

      CREATE TABLE users (
          id integer GENERATED BY DEFAULT AS IDENTITY,
          user_name text NOT NULL,
          email text NOT NULL,
          password text NOT NULL,
          phone_number text NOT NULL,
          auth_token text NOT NULL,
          CONSTRAINT pk_users PRIMARY KEY (id)
      );

     CREATE TABLE events (
          id integer GENERATED BY DEFAULT AS IDENTITY,
          caption text NOT NULL,
          description text NOT NULL,
          scheduled_start timestamp with time zone NOT NULL,
          duration interval NOT NULL,
          event_type event_type NOT NULL,
          status event_status NOT NULL,
          related_group_id integer NOT NULL,
          manager_id integer NOT NULL,
          CONSTRAINT pk_events PRIMARY KEY (id),
          CONSTRAINT fk_events_groups_related_group_id FOREIGN KEY (related_group_id) REFERENCES groups (id) ON DELETE CASCADE,
          CONSTRAINT fk_events_users_manager_id FOREIGN KEY (manager_id) REFERENCES users (id) ON DELETE CASCADE
      );

      CREATE TABLE groups_users_map (
          user_id integer NOT NULL,
          group_id integer NOT NULL,
          CONSTRAINT pk_groups_users_map PRIMARY KEY (user_id, group_id),
          CONSTRAINT fk_groups_users_map_groups_group_id FOREIGN KEY (group_id) REFERENCES groups (id) ON DELETE CASCADE,
          CONSTRAINT fk_groups_users_map_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
      );

     CREATE TABLE reports (
          id integer GENERATED BY DEFAULT AS IDENTITY,
          description text NOT NULL,
          report_type report_type NOT NULL,
          begin_moment timestamp with time zone NOT NULL,
          end_moment timestamp with time zone NOT NULL,
          user_id integer NOT NULL,
          CONSTRAINT pk_reports PRIMARY KEY (id),
          CONSTRAINT fk_reports_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
      );

     CREATE TABLE tasks (
          id integer GENERATED BY DEFAULT AS IDENTITY,
          caption text NOT NULL,
          description text NOT NULL,
          task_type task_type NOT NULL,
          task_status task_current_status NOT NULL,
          reporter_id integer NOT NULL,
          implementer_id integer NOT NULL,
          CONSTRAINT pk_tasks PRIMARY KEY (id),
          CONSTRAINT fk_tasks_users_implementer_id FOREIGN KEY (implementer_id) REFERENCES users (id) ON DELETE CASCADE,
          CONSTRAINT fk_tasks_users_user_id FOREIGN KEY (reporter_id) REFERENCES users (id) ON DELETE CASCADE
      );

      CREATE TABLE events_users_map (
          user_id integer NOT NULL,
          event_id integer NOT NULL,
          decision_type decision_type NOT NULL,
          CONSTRAINT pk_events_users_map PRIMARY KEY (user_id, event_id),
          CONSTRAINT fk_events_users_map_events_event_id FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
          CONSTRAINT fk_events_users_map_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
      );

